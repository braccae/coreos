name: Build and Publish Main Container TEST

on:
  push:
    branches: ['main']
    paths:
      - '.github/workflows/container-test.yml'
  workflow_dispatch:
  # schedule:
  #   - cron: '0 5 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VARIENT: latest

jobs:
  build-metadata: 
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VARIENT }}
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern={{date 'YYYYMMDD'}}

  build-arm64:
    runs-on: ubuntu-24.04-arm
    needs: build-metadata
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: redhat-actions/buildah-build@v2
        id: build
        with:
          context: .
          containerfiles: ./Containerfile
          platforms: linux/arm64
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ needs.build-metadata.outputs.tags }}-arm64
          labels: ${{ needs.build-metadata.outputs.labels }}

  build-x86_64:
    runs-on: ubuntu-24.04
    needs: build-metadata
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: redhat-actions/buildah-build@v2
        id: build
        with:
          context: .
          containerfiles: ./Containerfile
          platforms: linux/amd64
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ needs.build-metadata.outputs.tags }}-amd64
          labels: ${{ needs.build-metadata.outputs.labels }}

  create-and-push-manifest:
    runs-on: ubuntu-latest
    needs: [build-arm64, build-x86_64]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and Push Manifest List
        if: github.event_name != 'pull_request'
        run: |
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          TAGS="${{ needs.build-metadata.outputs.tags }}"

          # Split tags into an array
          IFS=',' read -ra ADDR <<< "$TAGS"

          for TAG in "${ADDR[@]}"; do
            echo "Processing tag: $TAG"
            buildah manifest create ${IMAGE_NAME}:${TAG}
            buildah manifest add ${IMAGE_NAME}:${TAG} ${IMAGE_NAME}:${TAG}-arm64
            buildah manifest add ${IMAGE_NAME}:${TAG} ${IMAGE_NAME}:${TAG}-amd64
            buildah manifest push --all ${IMAGE_NAME}:${TAG} docker://${IMAGE_NAME}:${TAG}
          done

name: Build and Publish HCI Universal Blue Container

on:
  push:
    branches: ['main']
    paths:
      - 'centos.Containerfile'
      - 'rootfs/common/**'
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VARIENT: centos

jobs:
  build-metadata:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # Default image
          tags: |
            type=raw,value=${{ env.VARIENT }}
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern={{date 'YYYYMMDD'}}

  build:
    runs-on: ubuntu-24.04
    needs: build-metadata
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Image
        uses: redhat-actions/buildah-build@v2
        id: build
        with:
          context: .
          containerfiles: ./${{ env.VARIENT }}.Containerfile
          platforms: linux/amd64
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ needs.build-metadata.outputs.tags }}
          labels: ${{ needs.build-metadata.outputs.labels }}

      - name: Push To Registry
        if: github.event_name != 'pull_request'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
